<%#-- copyright
OpenProject Backlogs Plugin

Copyright (C)2013-2014 the OpenProject Foundation (OPF)
Copyright (C)2011 Stephan Eckardt, Tim Felgentreff, Marnen Laibow-Koser, Sandro Munda
Copyright (C)2010-2011 friflaj
Copyright (C)2010 Maxime Guilbot, Andrew Vit, Joakim KolsjÃ¶, ibussieres, Daniel Passos, Jason Vasquez, jpic, Emiliano Heyns
Copyright (C)2009-2010 Mark Maglana
Copyright (C)2009 Joe Heck, Nate Lowrie

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License version 3.

OpenProject Backlogs is a derivative work based on ChiliProject Backlogs.
The copyright follows:
Copyright (C) 2010-2011 - Emiliano Heyns, Mark Maglana, friflaj
Copyright (C) 2011 - Jens Ulferts, Gregor Schmidt - Finn GmbH - Berlin, Germany

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See doc/COPYRIGHT.rdoc for more details.

++#%>
<%
  managable = ApplicationHelper.get_kanban_status?(@project)
%>

<% content_for :header_tags do %>
  <%= render :partial => 'shared/backlogs_header' %>
  <%= stylesheet_link_tag 'backlogs/taskboard.css' %>
<% end %>
<% html_title @sprint.name %>

<%= toolbar title: @sprint.name do %>

  <% if managable %>
    <li class="toolbar-item">
      <a href="#"
         data-target="kanban-modal"         
         title="<%= I18n.t(:label_news_new) %>"
         arial-label="<%= I18n.t(:label_news_new) %>"
         class="button -alt-highlight first-modal">
        <%= op_icon('button--icon icon-add') %>
        <span class="button--text"><%= t(:label_new_kanban) %></span>
      </a>
    </li>
  <% end %>

<!--  <li class="toolbar-item">-->
    <%#= link_to l(:label_kanban_board_edit),
                  edit_project_kanban_board_path(@project.id,@sprint.id)
    %>
<!--  </li>-->
<% end %>

<% breadcrumb_paths(link_to(l(:label_backlogs), backlogs_project_backlogs_path(@project)), link_to(@sprint.name, backlogs_project_backlogs_path(@sprint))) %>
<% if !@project.kanban_boards.present? %>
<script type="text/javascript">

RB.Taskboard = (function ($) {
  return RB.Object.create(RB.Model, {

    initialize: function (el) {
      var self = this; // So we can bind the event handlers to this object

      this.$ = $(el);
      this.el = el;

      // Associate this object with the element for later retrieval
      this.$.data('this', this);

      // Initialize column widths
      //this.colWidthUnit = $(".swimlane").width();
      //this.colWidthUnit = $(".wp-column-headers .wp-column").width();
      this.defaultColWidth = 1;
      this.loadColWidthPreference();
      this.updateColWidths();

      $("#col_width input").keyup(function (e) {
        if (e.which === 13) {
          self.updateColWidths();
        }
      });

      this.initializeTasks();
      this.initializeImpediments();

      this.initializeNewButtons();
      this.initializeSortables();
    },

    initializeNewButtons : function () {
      this.$.find('#tasks .add_new.clickable').click(this.handleAddNewTaskClick);
      this.$.find('#impediments .add_new.clickable').click(this.handleAddNewImpedimentClick);
    },

    initializeSortables : function () {
      this.$.find('#impediments .list').sortable({
        placeholder: 'placeholder',
        start:  this.dragStart,
        stop:   this.dragStop,
        update: this.dragComplete,
        cancel: '.prevent_edit'
      }).sortable('option', 'connectWith', '#impediments .list');
      $('#impediments .list').disableSelection();

      var list, augmentList, self = this;

      list = this.$.find('#tasks .list');
      augmentList = function () {
        $(list.splice(0, 50)).sortable({
          placeholder: 'placeholder',
          start:  self.dragStart,
          stop:   self.dragStop,
          update: self.dragComplete,
          cancel: '.prevent_edit'
        }).sortable('option', 'connectWith', '#tasks .list');
        $('#tasks .list').disableSelection();

        if (list.length > 0) {
          /*globals setTimeout*/
          setTimeout(augmentList, 10);
        }
      };
      augmentList();
    },

    initializeTasks : function () {
      this.$.find('.task').each(function (index) {
        RB.Factory.initialize(RB.Task, this);
      });
    },

    initializeImpediments : function () {
      this.$.find('.impediment').each(function (index) {
        RB.Factory.initialize(RB.Impediment, this);
      });
    },

    dragComplete: function (e, ui) {
      // Handler is triggered for source and target. Thus the need to check.
      var isDropTarget = (ui.sender === null);

      if (isDropTarget) {
        ui.item.data('this').saveDragResult();
      }
    },

    dragStart: function (e, ui) {
      ui.item.addClass("dragging");
    },

    dragStop: function (e, ui) {
      ui.item.removeClass("dragging");

      // FIXME: workaround for IE7
      if ($.browser.msie && $.browser.version <= 7) {
        ui.item.css("z-index", 0);
      }
    },

    handleAddNewImpedimentClick: function (e) {
      var row = $(this).parents("li").first();
      $('#taskboard').data('this').newImpediment(row);
    },

    handleAddNewTaskClick: function (e) {
      var row = $(this).parents("li").first();
      $('#taskboard').data('this').newTask(row);
    },

    loadColWidthPreference: function () {
      var w = RB.UserPreferences.get('taskboardColWidth');
      if (w === null || w === undefined) {
        w = this.defaultColWidth;
        RB.UserPreferences.set('taskboardColWidth', w);
      }
      $("#col_width input").val(w);
    },

    newImpediment: function (row) {
      var impediment, o;

      impediment = $('#impediment_template').children().first().clone();
      row.find(".list").first().prepend(impediment);

      o = RB.Factory.initialize(RB.Impediment, impediment);
      o.edit();
    },

    newTask: function (row) {
      var task, o;

      task = $('#task_template').children().first().clone();
      row.find(".list").first().prepend(task);

      o = RB.Factory.initialize(RB.Task, task);
      o.edit();
    },

    updateColWidths: function () {
      var w = parseInt($("#col_width input").val(), 10);

      if (isNaN(w) || w <= 0) {
        w = this.defaultColWidth;
      }
      $("#col_width input").val(w);
      RB.UserPreferences.set('taskboardColWidth', w);
      $(".swimlane").width(this.colWidthUnit * w).css('min-width', this.colWidthUnit * w);
      $(".wp-column-headers .wp-column").width(this.colWidthUnit * w).css('min-width', this.colWidthUnit * w);
      
    }
  });
}(jQuery));

</script>


<div id='rb'>
  <div id="taskboard" class="wp-work-wrapper">
    <div id="wp-work" class="wp-work" style="height: 330px;">
      <div id="wp-pool-column">
        <div id="wp-pool" style="display: block; padding-top: 36px;">
          <div id="wp-column-header-group" class="wp-column-header-group wp-fixed">
            <ul id="wp-column-headers" class="wp-column-headers">
              <% @statuses.each do |status| %>
                <li class="wp-column">
                  <div class="wp-column-header-flex">
                    <div class="wp-column-header-flex-1">
                      <h2><%= status.name %></h2>
                    </div>
                  </div>
                </li>
              <% end %>
            </ul>
          </div>

          <% if @sprint.stories(@project).any? %>
            <% @sprint.stories(@project).each do |story| %>
              <div class="wp-swimlane wp-first <%= story_html_id_or_empty(story) %>">
                <div class="wp-swimlane-header <%= isKanbanboard(@project) ? 'story-hide' : '' %>">
                  <div class="wp-heading story <%= mark_if_closed(story) %>" id="<%= story_html_id_or_empty(story) %>">
                                <span class="wp-swimlane-avatar">
                                <%= image_tag task_type_icon(story), class: "" %>
                                </span>

                    <%= work_package_link_or_empty(story) %>
                    <span class="wp-info">
                                    <span class="aui-lozenge"><%= story.status.name %></span>
                                </span>
                    <span class="wp-summary">
                                    <%= story.subject %>
                                </span>
                  </div>
                </div>

                <div id="tasks">
                  <ul class="wp-columns">
                    <% @statuses.each do |status| %>
                      <% if isKanbanboard(@project) == false %>
                        <li class="wp-column swimlane list <%= status.is_closed? ? 'closed' : '' %>" id="<%= story.id %>_<%= status.id %>">
                          <%= render :partial => "rb_tasks/task",
                                     :collection => story.tasks.select { |task| task.status.id == status.id } %>
                        </li>
                      <% else %>
                        <li class="wp-column swimlane list <%= status.is_closed? ? 'closed' : '' %>" id="<%= story.id %>_<%= status.id %>">
                          <%= render :partial => "rb_tasks/task",
                                     :collection => story.kanban_tasks.select { |task| task.status.id == status.id } %>
                        </li>
                      <% end %>
                    <% end %>
                  </ul>
                </div>
              </div>
            <% end %>
          <% else %>
            <div class="no-data">
              <div class="no-data-content">
                <span class="no-data-img"></span>
                <span class="no-data-title">There are no tasks for this board</span>
              </div>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>




  <div id="helpers">
    <select class="assigned_to_id template" id="assigned_to_id_options">
      <option value=""> </option>
      <% @project.possible_assignees.each do |user| %>
        <option value="<%= user.id %>" color="<%= get_backlogs_preference(user, :task_color) %>">
          <%= user.name %>
        </option>
      <% end %>
    </select>
    <div id="task_template">
      <%= render :partial => "rb_tasks/task", :object => Task.new, :locals => {:project => @project} %>
    </div>
    <div id="impediment_template">
      <%= render :partial => "rb_impediments/impediment", :object => Impediment.new, :locals => {:project => @project} %>
    </div>

    <div id="work_package_editor"> </div>
    <div class="meta" id="last_updated"><%= date_string_with_milliseconds( (@last_updated.blank? ? Time.now : @last_updated.updated_at) )  %></div>
    <div id="charts"> </div>
    <div id="preloader">
      <div id="spinner"> </div>
      <div id="warning"> </div>
    </div>
  </div>
</div>


<% else %>

<div id='rb'>
  <div id="taskboard" class="wp-work-wrapper">
    <div id="wp-work" class="wp-work" style="height: 330px;">
      <div id="wp-pool-column">
        <div id="wp-pool" style="display: block; padding-top: 42px;">
          <div id="wp-column-header-group" class="wp-column-header-group wp-fixed">
            <ul id="wp-column-headers" class="wp-column-headers">
              <% @statuses.each do |status| %>
                <li class="wp-column">
                  <div class="wp-column-header-flex">
                    <div class="wp-column-header-flex-1">
                      <h2><%= status.name %></h2>
                    </div>
                  </div>
                </li>
              <% end %>
            </ul>
          </div>
          <% @statuses_rmv = [] %>
          <% if @story_ids.present? %>
            <% @story_ids.each do |story| %>
              <div class="wp-swimlane wp-first <%= story_html_id_or_empty(story) %>">
                <div class="wp-swimlane-header <%= @project.is_multi_kanban ? 'story-hide' : '' %>">
                  <div class="wp-heading story <%= mark_if_closed(story) %>" id="<%= story_html_id_or_empty(story) %>">
                                <span class="wp-swimlane-avatar">
                                <%= image_tag task_type_icon(story), class: "" %>
                                </span>

                    <%= work_package_link_or_empty(story) %>
                    <span class="wp-info">
                                    <span class="aui-lozenge"><%= story.status.name %></span>
                                </span>
                    <span class="wp-summary">
                                    <%= story.subject %>
                                </span>
                  </div>
                </div>

                <div id="tasks">
                  <ul class="wp-columns">
                    <% @statuses.each do |status| %>

                      <li class="wp-column swimlane list <%= status.is_closed? ? 'closed' : '' %>" id="<%= story.id %>_<%= status.id %>">
                        <% if story.status.id == status.id%>
                          <%= render :partial => "rb_tasks/task",
                                     :locals => { :task => story}  %>
                        <% end %>
                      </li>

                    <% end %>
                  </ul>
                </div>
              </div>
            <% end %>
          <% else %>
            <div class="no-data">
              <div class="no-data-content">
                <span class="no-data-img"></span>
                <span class="no-data-title">There are no tasks for this board</span>
              </div>
            </div>
          <% end %>        </div>
      </div>
    </div>
  </div>




  <div id="helpers">
    <select class="assigned_to_id template" id="assigned_to_id_options">
      <option value=""> </option>
      <% @project.possible_assignees.each do |user| %>
        <option value="<%= user.id %>" color="<%= get_backlogs_preference(user, :task_color) %>">
          <%= user.name %>
        </option>
      <% end %>
    </select>
    <div id="task_template">
      <%= render :partial => "rb_tasks/task", :object => Task.new, :locals => {:project => @project} %>
    </div>
    <div id="impediment_template">
      <%= render :partial => "rb_impediments/impediment", :object => Impediment.new, :locals => {:project => @project} %>
    </div>

    <div id="work_package_editor"> </div>
    <div class="meta" id="last_updated"><%= date_string_with_milliseconds( (@last_updated.blank? ? Time.now : @last_updated.updated_at) )  %></div>
    <div id="charts"> </div>
    <div id="preloader">
      <div id="spinner"> </div>
      <div id="warning"> </div>
    </div>
  </div>
</div>

<% end %>

<div id="kanban-modal" class="new-kanban aside-panel-outer">
  <div class="aside-panel aside-panel-first">
    <div class="aside-content px-30">
      <div class="aside-header d-flex justify-content-between align-items-center">
        <h6 class="m-0"><%= l(:label_new_kanban) %></h6>
        <div class="close-btn close-panel-btn"><a href="javascript:void(0)"><em class="icon icon-close d-block"></em></a></div>
      </div>
      <div class="aside-body create-news py-20">
        <p class="mb-20">Select the workflow where the Kanban belongs.</p>
        <%= labelled_tabular_form_for [@project, @project.kanban_boards.new], html: { id: 'kanban-form' } do |f| %>
          <%= render partial: 'kanban_boards/form', locals: { f: f } %>
          <div class="aside-footer text-right">
            <%= styled_button_tag l(:button_cancel), class: 'button -light-gray close-panel-btn' %>
            <%= styled_button_tag l(:button_create), class: 'button -alt-highlight ml-20' %>
        <% end %>
        </div>
      </div>
    </div>
  </div>
</div>